#!/usr/bin/perl

use warnings;
use strict;

use Verse qw/verse/;
use Verse::Theme;
use Verse::Object::Page;
use File::Find;
use List::Util qw/max/;
use JSON::PP qw/decode_json/;

dir "{site}";
copy "{theme}/assets/*"  if exist "{theme}/assets";
copy "{root}/content/*"  if exist "{root}/content";

verse->{site}{cache} = {};
my $assets = path('{theme}/assets');
find sub {
	return unless -f;
	my $n = $File::Find::name;
	$n =~ s|^$assets/||;
	$n =~ s/[^a-z0-9]+/-/g;
	chomp(my $sha = qx(sha1sum $File::Find::name)); $sha =~ s/\s+.*//;
	verse->{site}{cache}{$n} = $sha;
}, $assets;

if (exist "{root}/docs") {
	copy "{root}/docs";
	find sub {
		return unless m/\.html$/;
		render { content => readf $File::Find::name },
			using => 'docs.tt',
			at    => $File::Find::name;
	}, path("{site}/docs/");
}

my @blog = reverse
	sort { ($a->{__dated} || 0) cmp ($b->{__dated} || 0) }
	grep { !$_->attrs->{draft} } blog->read_all;
$_->{timestamp} = $_->{__dated} for @blog;

render { articles => \@blog },
	using  => 'blog.tt',
	layout => 'site.tt',
	at     => '{site}/blog/index.html';

for my $blog (@blog){
	render $blog, 
		using  => $blog->attrs->{template} || "article.tt",
		layout => $blog->attrs->{layout}   || "site.tt",
		at => "{site}/blog/{permalink}/index.html";
}

for my $page (page->read_all) {
	render [$page, { articles => [@blog] }],
		using  => $page->attrs->{template} || "page.tt",
		layout => $page->attrs->{layout}   || "page.tt",
		at     => "{site}/".$page->attrs->{url};
}

open my $fh, "<", "data/releases"
	or die "Unable to read data/releases: $!\n";
my $releases = decode_json(do { local $/; <$fh> });
close $fh;

sub v {
	my ($v) = @_;
	my ($maj, $min, $rev) = split /\./, $v;
	return ($maj * 1000 * 1000)
	     + ($min * 1000)
	     +  $rev;
}

$_->{notes} =~ s/^#/##/gm for @{$releases->{all}};
my %xy;
$releases->{all} = [
  grep { $_->{_recent} }
  map {
    (my $xy = $_->{version}) =~ s/^(\d+\.\d+)\..*/$1/;
    $_->{_recent} = !$xy{$xy}; $xy{$xy} = 1;
    $_;
  }
  sort { v($b->{version}) cmp v($a->{version}) }
  @{$releases->{all}}];
render $releases,
	using  => 'download.tt',
	at     => "{site}/download/index.html";

render {},
	using  => 'nginx.tt',
	layout => 'empty.tt',
	at     => '{root}/nginx/conf/include/nginx.conf';

1;
